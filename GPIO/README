	======== Compiling with cmake (for x86) ======== 

mkdir build && cd build

cmake ../ -DCMAKE_INSTALL_PREFIX:PATH=/home/path/to/build/usr 

make

Note: comment out the code for GPIO control since it will not work in x86.
	  this section is mostly for debugging

	======== Cross-compiling with cmake ======== 
	
mkdir build && cd build

. /opt/poky/2.5.1/environment-setup-cortexa7hf-neon-vfpv4-poky-linux-gnueabi -c

cmake ../ -DCMAKE_INSTALL_PREFIX:PATH=/home/path/to/build/usr -DCMAKE_TOOLCHAIN_FILE=/home/path/to/crosscompile.cmake

make

copy the exe file "embeddedPA" to the Rasp

copy the library "libugpio.so" file to /usr/lib in the Rasp



	======== Copy files to the Raspberry Pi ======== 

Access the Rapsberry Pi through ethernet

	# ssh root@192.168.0.123

Copy the files in build to the rasp (copies at "/")

	# sudo scp ugpio_tests root@192.168.0.123:/ugpio_tests



	======== Configure the Raspberry Pi's network ======== 

This will make the pyrebase server FAIL. used mostly for development. 
You can still connect to the Rasp through ssh, but use dhcp configuration

Change the interface config file

	sudo nano etc/network/interfaces
	
Change the eth0 interface to:

auto eth0
iface eth0 inet static
	address 192.168.0.123
	netmask 255.255.255.0
	network 192.168.0.1
	gateway 192.168.0.1
	
This sets the IP of the Rasp to static.

